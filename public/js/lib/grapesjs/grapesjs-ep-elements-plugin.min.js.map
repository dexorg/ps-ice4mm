{"version":3,"sources":["webpack://grapesjs-ep-elements-plugin/webpack/universalModuleDefinition","webpack://grapesjs-ep-elements-plugin/webpack/bootstrap","webpack://grapesjs-ep-elements-plugin/./node_modules/@babel/runtime/helpers/objectSpread.js","webpack://grapesjs-ep-elements-plugin/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://grapesjs-ep-elements-plugin/./src/index.js","webpack://grapesjs-ep-elements-plugin/./src/components.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","target","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","obj","configurable","writable","__webpack_exports__","editor","opts","undefined","domc","DomComponents","defaultType","getType","customType","model","view","extendFnView","isComponent","el","tagName","hasAttribute","type","defaults","html","epElements","draggable","badgable","droppable","selectable","copyable","removable","attributes","data-gjs-type","traits","extend","events","dblclick","onActive","ev","stopPropagation","em","this","config","runCommand","types","accept","onSelect","Modal","close","customTypeText","indexOf","getAttribute","console","log","customTypeImg","addType","loadComponents","objectSpread_default"],"mappings":"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","file":"dist/grapesjs-ep-elements-plugin.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"grapesjs-ep-elements-plugin\"] = factory();\n\telse\n\t\troot[\"grapesjs-ep-elements-plugin\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","var defineProperty = require(\"./defineProperty\");\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nmodule.exports = _objectSpread;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import loadComponents from './components';\nimport loadBlocks from './blocks';\n\nexport default (editor, opts = {}) => {\n  const options = { ...{\n    // default options\n  },  ...opts };\n\n  // Add components\n  loadComponents(editor, options);\n\n  // Add blocks\n//  loadBlocks(editor, options);\n\n  // TODO Remove\n  //editor.on('load', () => editor.addComponents(`<div style=\"margin:100px; padding:25px;\">Content loaded from the plugin</div>`, { at: 0 }))\n};\n","export default (editor, config = {}) => {\n  const domc = editor.DomComponents;\n  const defaultType = domc.getType('default');\n  const defaultModel = defaultType.model;\n  const defaultView = defaultType.view;\n  const imageType = domc.getType('image');\n  const imageView = imageType.view;\n  debugger;\n\n  var customType = {\n    //extendFnView: ['render'],\n    extendFnView: ['onActive'],\n    // Define the Model\n    isComponent: (el) => {\n      if(el.tagName && el.tagName !== 'IMG' && el.hasAttribute('data-region')){\n        return {type: 'data-region'};\n        //,'data-region':el['data-region']};\n      }\n    },\n    model: {\n        // Extend default properties\n        defaults: {\n          name: 'general-region',\n          tagName: 'div',\n          html:'',\n          epElements: [],\n          //custom property for html to be passed in\n          // Can be dropped only inside `div` elements\n          draggable: true,\n          badgable: true,\n          // Cannot drop other elements inside it\n          droppable: ['[element-id]'],\n          // Cannot be copied\n          selectable: true,\n          copyable:false,\n          // can be removed\n          removable: true,\n          attributes: {\n            'data-gjs-type': 'data-region'\n          },\n          // Traits (Settings)\n          traits: [\n            // {\n            //     'type':'select',\n            //     'label':'Presentation Mode',\n            //     'name': 'presentationRef',\n            //     'options': [\n            //         { value: 'default', name: 'Default (icon)'},\n            //         { value: 'embedded', name: 'Embedded'}\n            //     ]\n            // },\n            // {\n            //     'type':'text',\n            //     'label': 'Icon link',\n            //     'name':'model-iconLink',\n            //     'changeProp': 1\n            // }\n\n          ], //good place to populate any settings in a sidebar (for future reference) like select color\n        },\n        // for setting up property change listener\n        // init: function() {\n        //     debugger;\n        //     this.listenTo(this, 'change:model-iconLink', this.doStuff);\n        // },\n        // doStuff: function () {\n        //     debugger;\n        //     // var iconLink = this.get('model-iconLink');\n        //\n        //\n        //     var trait = this.get('traits').where({name: 'presentationRef'})[0];\n        //     trait.set('options', [{ value:'default',name:'name1' }, ....])\n        //     //if image is set, then update traits for icon\n        //    // parent.updateEPElementDraft({elementId:this.get('element-id')});\n        // }\n      },\n        // The second argument of .extend are static methods and we'll put inside our\n        // isComponent() method. As you're putting a new Component type on top of the stack,\n        // not declaring isComponent() might probably break stuff, especially if you extend\n        // the default one.\n    //Define the View\n    view: defaultType.view.extend({\n\n      events: {\n        dblclick: 'onActive'\n      },\n      attributes: {\n\n      },\n\n      onActive: function(ev) {\n        debugger;\n        ev && ev.stopPropagation();\n        var em = this.opts.config.em;\n        var editor = em ? em.get('Editor') : '';\n\n        if (editor && this.model.get('editable')) {\n          editor.runCommand('open-ep-region-selection', {\n            target: this.model,\n            types: ['data-region','data-region-img', 'data-region-text'],\n            accept: '*',\n            onSelect: function() {\n              debugger;\n              editor.Modal.close();\n              //editor.AssetManager.setTarget(null);\n            }\n          });\n        }\n      },\n      // // The render() should return 'this'\n      // render: () => {\n      //   debugger;\n      //   let htmlStr = this.model.get('html') || '';\n      //\n      //   //defaultType.view.prototype.render.apply(this, args);\n      //\n      //\n      //   // Extend the original render method\n      //   //defaultType.view.prototype.render.apply(this, arguments);\n      //   //this.$el.append($('<div style=\"\">'+html+ '</div>'));\n      //\n      //   const { $el } = this;\n      //\n      //   //TODO: render first EP element inside of it\n      //   $el.innerHTML = '<div>' + htmlStr + '</div>';\n      //   // if (selectable) {\n      //   //     this.el.innerHTML = '<div style=\"pointer-events:all\">'+html+'</div>';\n      //   // }else {\n      //   //     this.el.innerHTML = '<div>' + html + '</div>';\n      //   // }\n      //   return this;\n      // }\n    })\n  };\n\n  var customTypeText = {\n    //Define the Model\n    extend: 'text',\n    //extendFnView: ['render'],\n    isComponent: (el) => {\n      // if(el.tagName && el.tagName === 'DIV' && el['data-region']){\n      let tagName = el.tagName || null;\n      let validTags = ['H1', 'H2', 'SPAN'];\n\n      if (tagName && validTags.indexOf(tagName) !== -1 && el.getAttribute && el.getAttribute('data-region')){\n        console.log('is text region component');\n        return {type: 'data-region-text'};\n        //, 'data-region':el['data-region']};\n      }\n    },\n    model: {\n      // Extend default properties\n      defaults: {\n        // tagName: 'img',\n        name: 'text-region',\n        //custom property for html to be passed in\n        // Can be dropped only inside `div` elements\n        draggable: true,\n        badgable: true,\n        // Cannot drop other elements inside it\n        droppable:true,// ['[element-id]'],//true,//['data-gjs-type=\"element-id'],\n        // Cannot be copied\n        selectable: true,\n        copyable:false,\n        epElements: [],\n        // can be removed\n        //removable: true,\n        attributes: {\n          'data-gjs-type': 'data-region-text',\n          //'data-region':''\n        }\n      }\n    },\n    //Define the View\n    view: {\n\n      events: {\n        dblclick: 'onActive'\n      },\n\n      onActive: function(ev) {\n        debugger;\n        ev && ev.stopPropagation();\n        var em = this.opts.config.em;\n        var editor = em ? em.get('Editor') : '';\n\n        if (editor && this.model.get('editable')) {\n          editor.runCommand('open-ep-region-selection', {\n            target: this.model,\n            types: ['ep-element'],\n            accept: '*',\n            onSelect: function() {\n              debugger;\n              editor.Modal.close();\n              //editor.AssetManager.setTarget(null);\n            }\n          });\n        }\n      },\n\n      // The render() should return 'this'\n      // render: function () {\n      //   debugger;\n      //   // var html = this.model.get('html');\n      //   // Extend the original render method\n      //   //comps.getType('image').view.prototype.render.apply(this, arguments);\n      //   //sdefaultType.view.prototype.render.apply(this, arguments);\n      //   //this.$el.append($('<div style=\"\">'+html+ '</div>'));\n      //\n      //   //TODO: render first EP element inside of it\n      //   debugger;\n      //   // this.el.innerHTML = '<div>' + html + '</div>';\n      //\n      //\n      //   // if (selectable) {\n      //   //     this.el.innerHTML = '<div style=\"pointer-events:all\">'+html+'</div>';\n      //   // }else {\n      //   //     this.el.innerHTML = '<div>' + html + '</div>';\n      //   // }\n      //   return this;\n      // }\n    }\n  };\n\n  var customTypeImg = {\n    //Define the Model\n    extend: 'image',\n    //extendFnView: ['render'],\n    isComponent: (el) => {\n      // if(el.tagName && el.tagName === 'DIV' && el['data-region']){\n      if(el.tagName && (el.tagName === 'IMG' || el.tagName === 'img') && el.getAttribute && el.getAttribute('data-region')){\n        console.log('is img region component');\n        return {type: 'data-region-img'};\n        //, 'data-region':el['data-region']};\n      }\n    },\n    model: {\n      // Extend default properties\n      defaults: {\n        // tagName: 'img',\n        name: 'img-region',\n        //custom property for html to be passed in\n        // Can be dropped only inside `div` elements\n        draggable: true,\n        badgable: true,\n        // Cannot drop other elements inside it\n        droppable: ['img[element-id'],//true,//['data-gjs-type=\"element-id'],\n        // Cannot be copied\n        selectable: true,\n        epElements: [],\n        copyable:false,\n        // can be removed\n        //removable: true,\n        attributes: {\n          'data-gjs-type': 'data-region-img',\n          //'data-region':''\n        }\n      }\n    },\n    //Define the View\n    view: {\n\n      events: {\n        dblclick: 'onActive'\n      },\n\n      onActive: function(ev) {\n        debugger;\n        ev && ev.stopPropagation();\n        var em = this.opts.config.em;\n        var editor = em ? em.get('Editor') : '';\n\n        if (editor && this.model.get('editable')) {\n          editor.runCommand('open-ep-region-selection', {\n            target: this.model,\n            types: ['ep-element'],\n            accept: '*',\n            onSelect: function() {\n              debugger;\n              editor.Modal.close();\n              //editor.AssetManager.setTarget(null);\n            }\n          });\n        }\n      },\n\n      // The render() should return 'this'\n      // render: function () {\n      //   debugger;\n      //   // var html = this.model.get('html');\n      //   // Extend the original render method\n      //   //comps.getType('image').view.prototype.render.apply(this, arguments);\n      //   //sdefaultType.view.prototype.render.apply(this, arguments);\n      //   //this.$el.append($('<div style=\"\">'+html+ '</div>'));\n      //\n      //   //TODO: render first EP element inside of it\n      //   debugger;\n      //   // this.el.innerHTML = '<div>' + html + '</div>';\n      //\n      //\n      //   // if (selectable) {\n      //   //     this.el.innerHTML = '<div style=\"pointer-events:all\">'+html+'</div>';\n      //   // }else {\n      //   //     this.el.innerHTML = '<div>' + html + '</div>';\n      //   // }\n      //   return this;\n      // }\n    }\n  };\n  //\n  // var customEPType = {\n  //   // Define the Model\n  //   model: defaultModel.extend({\n  //         // Extend default properties\n  //         defaults: Object.assign({}, defaultModel.prototype.defaults, {\n  //           tagName: 'div',\n  //           //custom property for html to be passed in\n  //           html: '',\n  //           // Can be dropped only inside region `div` elements\n  //           draggable: ['data-region'], //'div, div *',\n  //           badgable: true,\n  //           // Cannot drop other elements inside it\n  //           droppable: false,\n  //           // Cannot be copied\n  //           copyable:false,\n  //           // can be removed\n  //           removable: true,\n  //           // Traits (Settings)\n  //           iconLink:'',\n  //           traits: [\n  //             {\n  //               'type':'select',\n  //               'label':'Presentation Mode',\n  //               'name': 'presentationRef',\n  //               'options': [\n  //                 { value: 'default', name: 'Default (icon)'},\n  //                 { value: 'embedded', name: 'Embedded'}\n  //               ]\n  //             },\n  //             {\n  //               'type':'text',\n  //               'label': 'Icon link',\n  //               'name':'model-iconLink',\n  //               'changeProp': 1\n  //             }\n  //\n  //           ], //good place to populate any settings in a sidebar (for future reference) like select color\n  //         }),\n  //         // for setting up property change listener\n  //         // init: function() {\n  //         //     debugger;\n  //         //     this.listenTo(this, 'change:model-iconLink', this.doStuff);\n  //         // },\n  //         // doStuff: function () {\n  //         //     debugger;\n  //         //     // var iconLink = this.get('model-iconLink');\n  //         //\n  //         //\n  //         //     var trait = this.get('traits').where({name: 'presentationRef'})[0];\n  //         //     trait.set('options', [{ value:'default',name:'name1' }, ....])\n  //         //     //if image is set, then update traits for icon\n  //         //    // parent.updateEPElementDraft({elementId:this.get('element-id')});\n  //         // }\n  //       },\n  //       // The second argument of .extend are static methods and we'll put inside our\n  //       // isComponent() method. As you're putting a new Component type on top of the stack,\n  //       // not declaring isComponent() might probably break stuff, especially if you extend\n  //       // the default one.\n  //       {\n  //         isComponent: function(el) {\n  //           if(el.tagName && el.tagName === 'DIV' && el['element-id']){\n  //             return {type: componentType, 'element-id':el['element-id']};\n  //           }\n  //         }\n  //       }),\n  //   //Define the View\n  //   view: defaultView.extend({\n  //     // The render() should return 'this'\n  //     render: function () {\n  //       debugger;\n  //       var html = this.model.get('html');\n  //       // Extend the original render method\n  //       defaultType.view.prototype.render.apply(this, arguments);\n  //       //this.$el.append($('<div style=\"\">'+html+ '</div>'));\n  //\n  //       if (selectable) {\n  //         this.el.innerHTML = '<div style=\"pointer-events:all\">'+html+'</div>';\n  //       }else {\n  //         this.el.innerHTML = '<div>' + html + '</div>';\n  //       }\n  //       return this;\n  //     }\n  //   })\n  // };\n  //\n  //\n  // domc.addType('ep-element', customEPType);\n\n\n  domc.addType('data-region',customType);\n  domc.addType('data-region-img',customTypeImg);\n  domc.addType('data-region-text',customTypeText);\n\n\n}\n"],"sourceRoot":""}